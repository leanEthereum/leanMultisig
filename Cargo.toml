[package]
name = "whirlaway"
version.workspace = true
edition.workspace = true

[workspace.package]
version = "0.1.0"
edition = "2024"

[workspace]
members = ["crates/*", "crates/zk_vm/zk_vm_trace", "crates/zk_vm/zk_vm_air"]

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.unused_must_use = "deny"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rust.dead_code = "allow"
rustdoc.all = "warn"

[workspace.lints.clippy]
# These are some of clippy's nursery (i.e., experimental) lints that we like.
# By default, nursery lints are allowed. Some of the lints below have made good
# suggestions which we fixed. The others didn't have any findings, so we can
# assume they don't have that many false positives. Let's enable them to
# prevent future problems.
borrow_as_ptr = "warn"
branches_sharing_code = "warn"
clear_with_drain = "warn"
cloned_instead_of_copied = "warn"
collection_is_never_read = "warn"
dbg_macro = "warn"
derive_partial_eq_without_eq = "warn"
empty_line_after_doc_comments = "warn"
empty_line_after_outer_attr = "warn"
enum_glob_use = "warn"
equatable_if_let = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
flat_map_option = "warn"
from_iter_instead_of_collect = "warn"
if_not_else = "warn"
if_then_some_else_none = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
iter_with_drain = "warn"
iter_without_into_iter = "warn"
large_stack_frames = "warn"
manual_assert = "warn"
manual_clamp = "warn"
manual_is_variant_and = "warn"
manual_string_new = "warn"
match_same_arms = "warn"
missing-const-for-fn = "warn"
mutex_integer = "warn"
naive_bytecount = "warn"
needless_bitwise_bool = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
nonstandard_macro_braces = "warn"
option_as_ref_cloned = "warn"
or_fun_call = "warn"
path_buf_push_overwrite = "warn"
read_zero_byte_vec = "warn"
result_large_err = "allow"
redundant_clone = "warn"
redundant_else = "warn"
single_char_pattern = "warn"
string_lit_as_bytes = "warn"
string_lit_chars_any = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_undefined_repr = "warn"
trivial_regex = "warn"
tuple_array_conversions = "warn"
type_repetition_in_bounds = "warn"
uninhabited_references = "warn"
unnecessary_self_imports = "warn"
unnecessary_struct_initialization = "warn"
unnested_or_patterns = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
use_self = "warn"
useless_let_if_seq = "warn"
while_float = "warn"
zero_sized_map_values = "warn"

# These are nursery lints which have findings. Allow them for now. Some are not
# quite mature enough for use in our codebase and some we don't really want.
# Explicitly listing should make it easier to fix in the future.
as_ptr_cast_mut = "allow"
cognitive_complexity = "allow"
debug_assert_with_mut_call = "allow"
doc_markdown = "allow"
fallible_impl_from = "allow"
future_not_send = "allow"
needless_collect = "allow"
non_send_fields_in_send_ty = "allow"
redundant_pub_crate = "allow"
significant_drop_in_scrutinee = "allow"
significant_drop_tightening = "allow"
too_long_first_doc_paragraph = "allow"

[workspace.dependencies]
# Local
air = { path = "crates/air" }
sumcheck = { path = "crates/sumcheck" }
utils = { path = "crates/utils" }
vm = { path = "crates/vm" }
xmss = { path = "crates/xmss" }
pcs = { path = "crates/pcs" }
lookup = { path = "crates/lookup" }
compiler = { path = "crates/compiler" }
zk_vm = { path = "crates/zk_vm" }
rec_aggregation = { path = "crates/rec_aggregation" }
zk_vm_trace = { path = "crates/zk_vm/zk_vm_trace" }
zk_vm_air = { path = "crates/zk_vm/zk_vm_air" }

# External
thiserror = "2.0"
rand = "0.9.2"
sha3 = "0.10.8"
rayon = "1.5.1"
serde = { version = "1.0.219", features = ["derive"] }
derive_more = { version = "2.0.1", features = ["full"] }
pest = "2.7"
pest_derive = "2.7"
colored = "3.0.0"
tracing = "0.1.26"
tracing-subscriber = { version = "0.3.19", features = ["std", "env-filter"] }
tracing-forest = { version = "0.2.0", features = ["ansi", "smallvec"] }
p3-koala-bear = { git = "https://github.com/TomWambsgans/Plonky3.git", branch = "lean-multisig" }
p3-baby-bear = { git = "https://github.com/TomWambsgans/Plonky3.git", branch = "lean-multisig" }
p3-field = { git = "https://github.com/TomWambsgans/Plonky3.git", branch = "lean-multisig" }
p3-poseidon2 = { git = "https://github.com/TomWambsgans/Plonky3.git", branch = "lean-multisig" }
p3-matrix = { git = "https://github.com/TomWambsgans/Plonky3.git", branch = "lean-multisig" }
p3-blake3 = { git = "https://github.com/TomWambsgans/Plonky3.git", branch = "lean-multisig" }
p3-symmetric = { git = "https://github.com/TomWambsgans/Plonky3.git", branch = "lean-multisig" }
p3-air = { git = "https://github.com/TomWambsgans/Plonky3.git", branch = "lean-multisig" }
p3-uni-stark = { git = "https://github.com/TomWambsgans/Plonky3.git", branch = "lean-multisig" }
p3-poseidon2-air = { git = "https://github.com/TomWambsgans/Plonky3.git", branch = "lean-multisig" }
p3-goldilocks = { git = "https://github.com/TomWambsgans/Plonky3.git", branch = "lean-multisig" }
p3-challenger = { git = "https://github.com/TomWambsgans/Plonky3.git", branch = "lean-multisig" }
p3-util = { git = "https://github.com/TomWambsgans/Plonky3.git", branch = "lean-multisig" }

whir-p3 = { git = "https://github.com/TomWambsgans/whir-p3", branch = "lean-multisig" }

[dependencies]
air.workspace = true
p3-field.workspace = true
p3-koala-bear.workspace = true
p3-poseidon2.workspace = true
rand.workspace = true
p3-poseidon2-air.workspace = true
p3-matrix.workspace = true
p3-challenger.workspace = true
p3-symmetric.workspace = true
whir-p3.workspace = true
p3-uni-stark.workspace = true
utils.workspace = true
p3-util.workspace = true
pcs.workspace = true
p3-air.workspace = true
